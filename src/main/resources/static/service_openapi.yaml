openapi: 3.0.0
info:
  title: Cloud Resource Janitor
  description: |
    Janitor service to cleanup cloud resources created by Terra CRL.
  version: 0.0.0

servers:
  - url: /

security:
  - googleoauth:
      - openid
      - email
      - profile
  - bearerAuth: []

paths:
  '/status':
    get:
      security: []
      description: |
        Returns the operational status of the service
      operationId: serviceStatus
      tags:
        - unauthenticated
      responses:
        200:
          description: Service is functional
          $ref: '#/components/responses/StatusResponse'
        500:
          description: Service is broken
          $ref: '#/components/responses/StatusResponse'

  # TODO(PF-57) Add a shutdown to only be callable by Kubernetes in production and to be hooked to Pod termination.

  '/api/janitor/v1/resource':
    post:
      description: |
        Create a new tracked resource.
      operationId: createResource
      tags:
        - janitor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateResourceRequestBody'
      responses:
        200:
          description: Ok
          $ref: '#/components/responses/CreateResponse'
        400:
          description: Bad request - invalid id, badly formed
          $ref: '#/components/responses/ErrorResponse'
        403:
          description: Permission denied
          $ref: '#/components/responses/ErrorResponse'
        500:
          description: Creation request error
          $ref: '#/components/responses/ErrorResponse'
    get:
      description: |
        Return tracked resources matching the request filters
      operationId: getResources
      tags:
        - janitor
      parameters:
        - name: cloudResourceUid
          in: query
          description: The cloud resource uid of the tracked resources.
          schema:
            $ref: '#/components/schemas/CloudResourceUid'
        - name: state
          in: query
          description: The state of the tracked resource's cleanup to limit results to.
          schema:
            $ref: '#/components/schemas/ResourceState'
        - name: offset
          in: query
          description: The number of items to skip before starting to collect resources.
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The numbers of resources to return. 0 is no limit.
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        200:
          description: OK
          $ref: '#/components/responses/GetResourcesResponse'
        403:
          description: Permission denied
          $ref: '#/components/responses/ErrorResponse'
    put:
      description: |
        Update tracked resources, currently it supports update resource state to ABANDON or READY(Bump)
      operationId: updateResource
      tags:
        - janitor
      parameters:
        - name: cloudResourceUid
          in: query
          description: The cloud resource uid of the tracked resources.
          required: true
          schema:
            $ref: '#/components/schemas/CloudResourceUid'
        - name: state
          in: query
          description: What state to set the resources. Only ABANDON and READY are supported.
          required: true
          schema:
            $ref: '#/components/schemas/ResourceState'
      responses:
        204:
          description: Resource is updated successfully
        400:
          description: bad cloudResourceUid or state
          $ref: '#/components/responses/ErrorResponse'
        403:
          description: Permission denied
          $ref: '#/components/responses/ErrorResponse'
        404:
          description: Resource not found for the id.
        500:
          description: Update request error
          $ref: '#/components/responses/ErrorResponse'

  '/api/janitor/v1/resource/{id}':
    parameters:
      - $ref: '#/components/parameters/Id'
    get:
      description: |
        Get the resource by Janitor UUID.
      operationId: getResource
      tags:
        - janitor
      responses:
        200:
          description: OK
          $ref: '#/components/responses/GetResourceResponse'
        403:
          description: Permission denied
          $ref: '#/components/responses/ErrorResponse'
        404:
          description: Resource not found for the id.
        500:
          description: Get request error
          $ref: '#/components/responses/ErrorResponse'

  '/api/janitor/v1/resource/bumpErrors':
    put:
      description: Bump all the ERRORs to READY, allowing many resources to be retried for cleanup.
      operationId: bumpErrors
      tags:
        - janitor
      responses:
        204:
          description: OK
        403:
          description: Permission denied
          $ref: '#/components/responses/ErrorResponse'

components:
  parameters:
    Id:
      name: id
      in: path
      description: A UUID to used to identify an object in the Janitor
      required: true
      schema:
        type: string

  schemas:
    ErrorReport:
      type: object
      properties:
        message:
          type: string
        statusCode:
          type: integer
        causes:
          type: array
          items:
            type: string

    SystemStatus:
      type: object
      properties:
        ok:
          description: status of this service
          type: boolean
        systems:
          type: object
          additionalProperties:
            type: object
            properties:
              ok:
                type: boolean
              messages:
                type: array
                items:
                  type: string

    CreateResourceRequestBody:
      type: object
      required:
        - resourceUid
        - creation
        - expiration
      properties:
        resourceUid:
          $ref: '#/components/schemas/CloudResourceUid'
        resourceMetadata:
          $ref: '#/components/schemas/ResourceMetadata'
        labels:
          description: The labels for the resource
          type: object
          additionalProperties:
            type: string
        creation:
          description: The resource creation time
          type: string
          format: 'date-time'
          example: '2020-01-13T12:59:26+00:00'
        expiration:
          description: The resource expiration time
          type: string
          format: 'date-time'
          example: '2020-01-14T12:59:26+00:00'

    CreatedResource:
      type: object
      properties:
        id:
          description: UUID of a newly-created tracked resource
          type: string

    TrackedResourceInfo:
      description: Information about a resource tracked for cleanup.
      type: object
      properties:
        id:
          description: The Janitor UUID of the tracked resource.
          type: string
        resourceUid:
          description: The CloudResourceUid of the tracked resource.
          $ref: '#/components/schemas/CloudResourceUid'
        metadata:
          $ref: '#/components/schemas/ResourceMetadata'
        state:
          description: The state of the tracked resource's cleanup.
          $ref: '#/components/schemas/ResourceState'
        creation:
          description: When the Janitor started tracking this resource.
          type: string
          format: date-time
        expiration:
          description: When the resource expires and can be cleaned up.
          type: string
          format: date-time
        labels:
          description: The labels for the tracked resource
          type: object
          additionalProperties:
            type: string

    TrackedResourceInfoList:
      description: A list of tracked resources.
      type: object
      properties:
        resources:
          type: array
          items:
            $ref: '#/components/schemas/TrackedResourceInfo'

    ResourceState:
      description: Possible tracked resource cleaning states.
      type: string
      enum:
        - READY
        - CLEANING
        - DONE
        - ERROR
        - ABANDONED
        - DUPLIATED

    ResourceMetadata:
      description: Additional information about a resource that does not uniquely identify.
      type: object
      properties:
        googleProjectParent:
          description: |
            The parent resource name of a Google Project resource, e.g. "folders/1234" or
            "organizations/1234". This must only be set for Google Project resources.
          type: string
        workspaceOwner:
          description: |
            The email identifier of the user who owns a workspace. Janitor will
            impersonate this user when deleting the workspace. This must only be
            set for workspace resources.
          type: string

    GoogleAiNotebookInstanceUid:
      type: object
      required:
        - projectId
        - location
        - instanceId
      properties:
        projectId:
          type: string
        location:
          description: The location of the instance, e.g. 'uswest1-b'.
          type: string
        instanceId:
          description: The user-provided instance id to identify the instance.
          type: string

    GoogleBigQueryDatasetUid:
      type: object
      required:
        - projectId
        - datasetId
      properties:
        projectId:
          type: string
        datasetId:
          type: string

    GoogleBigQueryTableUid:
      type: object
      required:
        - projectId
        - datasetId
        - tableId
      properties:
        projectId:
          type: string
        datasetId:
          type: string
        tableId:
          type: string

    GoogleBlobUid:
      type: object
      required:
        - bucketName
        - blobName
      properties:
        bucketName:
          type: string
        blobName:
          type: string

    GoogleBucketUid:
      type: object
      required:
        - bucketName
      properties:
        bucketName:
          type: string

    GoogleProjectUid:
      type: object
      required:
        - projectId
      properties:
        projectId:
          type: string

    AzureResourceGroup:
      type: object
      required:
      - tenantId
        - subscriptionId
      - resourceGroupName
      properties:
        tenantId:
          description: The tenant ID.
          type: string
        subscriptionId:
          description: The subscription ID.
          type: string
        resourceGroupName:
          description: Name of the resource group.
          type: string

    AzurePublicIp:
      type: object
      required:
        - resourceGroup
        - ipName
      properties:
        resourceGroup:
          $ref: '#/components/schemas/AzureResourceGroup'
        ipName:
          description: The user-provided name to identify the IP.
          type: string

    AzureDisk:
      type: object
      required:
        - resourceGroup
        - diskName
      properties:
        resourceGroup:
          $ref: '#/components/schemas/AzureResourceGroup'
        diskName:
          description: The user-provided name to identify the disk.
          type: string

    AzureNetwork:
      type: object
      required:
        - resourceGroup
        - networkName
      properties:
        resourceGroup:
          $ref: '#/components/schemas/AzureResourceGroup'
        networkName:
          description: The user-provided name to identify the network.
          type: string

    AzureNetworkSecurityGroup:
      type: object
      required:
        - resourceGroup
        - networkSecurityGroupName
      properties:
        resourceGroup:
          $ref: '#/components/schemas/AzureResourceGroup'
        networkSecurityGroupName:
          description: The user-provided name to identify the network security group.
          type: string

    AzureVirtualMachine:
      type: object
      required:
        - resourceGroup
        - vmName
      properties:
        resourceGroup:
          $ref: '#/components/schemas/AzureResourceGroup'
        vmName:
          description: The user-provided name to identify the VM.
          type: string

    AzureRelay:
      type: object
      required:
        - resourceGroup
        - relayName
      properties:
        resourceGroup:
          $ref: '#/components/schemas/AzureResourceGroup'
        relayName:
          description: The user-provided name to identify the relay.
          type: string

    AzureRelayHybridConnection:
      type: object
      required:
        - resourceGroup
        - namespace
        - hybridConnectionName
      properties:
        resourceGroup:
          $ref: '#/components/schemas/AzureResourceGroup'
        namespace:
          description: The user-provided name to identify the Relay.
          type: string
        hybridConnectionName:
          description: The user-provided name to identify the Relay HybridConnection.
          type: string

    AzureContainerInstance:
      type: object
      required:
        - resourceGroup
        - containerGroupName
        - containers
        - operatingSystemTypes
      properties:
        resourceGroup:
          $ref: '#/components/schemas/AzureResourceGroup'
        containerGroupName:
          description: The name of the container group.
          type: string
        containers:
          description: The containers within the container group.
          type: array
          items:
            type: object
            required:
              - name
              - image
            properties:
              name:
                description: The user-provided name of the container instance.
                type: string
              image:
                description: The name of the image used to create the container instance.
                type: string
              command:
                description: The commands to execute within the container instance in exec form.
                type: array
                items:
                  type: string
              ports:
                description: The exposed ports on the container instance.
                type: array
                items:
                  type: object
                  required:
                    - protocol
                    - port
                  properties:
                    protocol:
                      description: The protocol associated with the port.
                      type: string
                      enum: [TCP, UDP]
                    port:
                      type: integer
                      description: The port number exposed within the container group.
              environmentVariables:
                description: The environment variables to set in the container instance.
                type: array
                items:
                  type: object
                  required:
                    - name
                  properties:
                    name:
                      description: The name of the environment variable.
                      type: string
                    value:
                      description: The value of the environment variable.
                      type: string
                    secureValue:
                      description: The value of the secure environment variable.
                      type: string
        operatingSystemTypes:
          description: The operating system type required by the containers in the container group.
          type: string
          enum: [Windows, Linux]

    AzureBatchPool:
      type: object
      required:
        - resourceGroup
        - id
      properties:
        resourceGroup:
          $ref: '#/components/schemas/AzureResourceGroup'
        id:
          description: Identifier of a Batch Pool
          type: string

    TerraWorkspaceUid:
      type: object
      required:
      - workspaceId
      - workspaceManagerInstance
      properties:
        workspaceId:
          description: The UUID of the workspace
          type: string
          format: uuid
        workspaceManagerInstance:
          description: |
            The URL of the Workspace Manager instance which manages this workspace. This must be
            in Janitor's configured allowlist.
          type: string

    AzureManagedIdentity:
      type: object
      required:
        - resourceGroup
        - identityName
      properties:
        resourceGroup:
          $ref: '#/components/schemas/AzureResourceGroup'
        identityName:
          description: The user-provided name to identify the managed identity.
          type: string

    # A cloud resource unique identifier. Each CloudResourceUid represents exactly one cloud resource.
    # We are not doing polymorphism at this moment because of lack of support in swagger-codegen or openApiGenerator
    # Now CloudResourceUid contains all possible cloud resource types, and we will assume there is only one being set
    # when using this.
    CloudResourceUid:
      type: object
      properties:
        googleAiNotebookInstanceUid:
          $ref: '#/components/schemas/GoogleAiNotebookInstanceUid'
        googleBigQueryDatasetUid:
          $ref: '#/components/schemas/GoogleBigQueryDatasetUid'
        googleBigQueryTableUid:
          $ref: '#/components/schemas/GoogleBigQueryTableUid'
        googleBlobUid:
          $ref: '#/components/schemas/GoogleBlobUid'
        googleBucketUid:
          $ref: '#/components/schemas/GoogleBucketUid'
        googleProjectUid:
          $ref: '#/components/schemas/GoogleProjectUid'
        azurePublicIp:
          $ref: '#/components/schemas/AzurePublicIp'
        azureDisk:
          $ref: '#/components/schemas/AzureDisk'
        azureNetwork:
          $ref: '#/components/schemas/AzureNetwork'
        azureNetworkSecurityGroup:
          $ref: '#/components/schemas/AzureNetworkSecurityGroup'
        azureVirtualMachine:
          $ref: '#/components/schemas/AzureVirtualMachine'
        azureRelay:
          $ref: '#/components/schemas/AzureRelay'
        azureRelayHybridConnection:
          $ref: '#/components/schemas/AzureRelayHybridConnection'
        azureContainerInstance:
          $ref: '#/components/schemas/AzureContainerInstance'
        azureBatchPool:
          $ref: '#/components/schemas/AzureBatchPool'
        terraWorkspace:
          $ref: '#/components/schemas/TerraWorkspaceUid'
        azureManagedIdentity:
          $ref: '#/components/schemas/AzureManagedIdentity'

  responses:
    ErrorResponse:
      description: common error response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorReport'

    StatusResponse:
      description: common status response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SystemStatus'

    CreateResponse:
      description: Response to Create calls
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatedResource'

    GetResourceResponse:
      description: Response to getResource calls
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TrackedResourceInfo'

    GetResourcesResponse:
      description: Response to getResources calls
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TrackedResourceInfoList'

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
    authorization:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            openid: open id authorization
            email: email authorization
            profile: profile authorization
