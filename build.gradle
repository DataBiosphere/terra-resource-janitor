plugins {
    id 'idea'
    id 'jacoco'
    id 'java'

    id 'com.diffplug.spotless' version '6.11.0'
    id 'com.github.ben-manes.versions' version '0.42.0'
    id 'com.google.cloud.tools.jib' version '3.3.0'
    id 'de.undercouch.download' version '5.2.1'
    id 'org.hidetake.swagger.generator' version '2.19.2'
    id 'org.sonarqube' version '4.0.0.2929'
    id 'org.springframework.boot' version '2.7.6'
}

allprojects {
    group = 'bio.terra'
    version = gradle.janitorVersion
    ext {
        artifactGroup = "${group}.janitor"
        swaggerOutputDir = "${buildDir}/generated"
        resourceDir = "${rootDir}/src/main/resources"
    }

    java {
        toolchain {
            languageVersion.set(JavaLanguageVersion.of(17))
        }
    }

    apply plugin: 'idea'
    idea {
        module {
            generatedSourceDirs = [file("${swaggerOutputDir}/src/main/java")]
            downloadJavadoc = true
        }
    }
}

// If true, search local repository (~/.m2/repository/) first for dependencies.
def useMavenLocal = false
repositories {
    if (useMavenLocal) {
        mavenLocal() // must be listed first to take effect
    }
    mavenCentral()
    maven {
        url 'https://broadinstitute.jfrog.io/broadinstitute/libs-release/'
    }
    maven {
        url 'https://broadinstitute.jfrog.io/broadinstitute/libs-snapshot-local/'
    }
}

dependencies {
    ext {
        jerseyVersion = "2.35"
        springVersion = "2.7.6"
    }
    // Common utils
    implementation group: 'org.apache.commons', name: 'commons-dbcp2', version: '2.9.0'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    implementation group: 'org.apache.commons', name: 'commons-pool2', version: '2.11.1'

    // Spring
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jdbc', version: springVersion
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: springVersion
    annotationProcessor group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: springVersion

    // Misc. Services
    implementation group: 'org.webjars', name: 'webjars-locator-core', version: '0.52'
    implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'

    // Google dependencies
    constraints {
        implementation group: 'com.google.guava', name: 'guava', version: '31.1-jre' // "-jre' for Java 8 or higher
    }
    implementation platform('com.google.cloud:libraries-bom:26.0.0') // use common bom

    implementation group: 'com.google.auto.value', name: 'auto-value-annotations', version: '1.9'
    implementation group: 'com.google.cloud', name: 'google-cloud-billing', version: '2.3.0'
    implementation group: 'com.google.cloud', name: 'google-cloud-core-http', version: '2.8.0'
    implementation group: 'com.google.cloud', name: 'google-cloud-pubsub', version: '1.120.0'
    implementation group: 'com.google.cloud', name: 'google-cloud-storage', version: '2.9.2'
    annotationProcessor group: 'com.google.auto.value', name: 'auto-value', version: '1.9'

    // Database
    implementation group: 'org.liquibase' , name: 'liquibase-core', version: '4.16.0'
    runtimeOnly group: 'org.postgresql', name: 'postgresql', version: '42.5.0'

    // Terra libraries
    implementation group: 'bio.terra', name: 'terra-common-lib', version: '0.0.76-SNAPSHOT'
    implementation group: 'bio.terra', name: 'terra-cloud-resource-lib', version: '1.2.4-SNAPSHOT'
    implementation group: 'bio.terra', name: 'workspace-manager-client', version: '0.254.575-SNAPSHOT'

    // hk2 is required to use WSM client, but not correctly exposed by the client
    implementation group: 'org.glassfish.jersey.inject', name: 'jersey-hk2', version: jerseyVersion

    // Metrics & Tracing
    implementation group: 'io.opencensus', name: 'opencensus-exporter-stats-stackdriver', version: '0.31.1'

    // Swagger deps
    implementation group: 'io.swagger.core.v3', name: 'swagger-annotations', version: '2.2.2'
    runtimeOnly group: 'org.webjars.npm', name: 'swagger-ui-dist', version: '3.36.2'
    swaggerCodegen group: 'io.swagger.codegen.v3', name: 'swagger-codegen-cli', version: '3.0.35'

    // Test deps
    testImplementation('org.springframework.boot:spring-boot-starter-test:2.7.6') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    // Transitive dependency constraints due to security vulnerabilities in prior versions.
    // These are not directly included, they are just constrained if they are pulled in as
    // transitive dependencies.
    constraints {
        implementation('com.google.protobuf:protobuf-java:3.21.10')
        implementation('org.yaml:snakeyaml:1.33')
        implementation('io.projectreactor.netty:reactor-netty-http:1.0.24')
        implementation('org.bouncycastle:bcpkix-jdk15on:1.70')
        implementation('org.bouncycastle:bcprov-jdk15on:1.70')
        // TODO(PF-2299): Remove these once all dependencies are using >3.0.0. This
        //  is forced to version 2.1.6 here to paper over a breaking change in the
        //  underlying library (the move from javax.ws... to jakarta.ws... package).
        implementation('jakarta.ws.rs:jakarta.ws.rs-api') {
            version {
                strictly '2.1.6'
            }
        }
        implementation('org.glassfish.jersey.core:jersey-common') {
            version {
                strictly jerseyVersion
            }
        }
        // slf4j-api is pulled in via TCL, Janitor cannot go to version 2.0 until
        // TCL does.
        implementation('org.slf4j:slf4j-api') {
            version {
                strictly '1.7.36'
            }
        }

    }
}

// for scans
if (hasProperty('buildScan')) {
    buildScan {
        termsOfServiceUrl = 'https://gradle.com/terms-of-service'
        termsOfServiceAgree = 'yes'
    }
}

def gradleIncDir= "$rootDir/gradle"
apply from: "$gradleIncDir/dependency-locking.gradle"
apply from: "$gradleIncDir/jacoco.gradle"
apply from: "$gradleIncDir/javadoc.gradle"
apply from: "$gradleIncDir/jib.gradle"
apply from: "$gradleIncDir/sonarqube.gradle"
apply from: "$gradleIncDir/spotless.gradle"
apply from: "$gradleIncDir/swagger-server.gradle"
apply from: "$gradleIncDir/test.gradle"

tasks.named('dependencies') {
    dependsOn(':terra-resource-janitor-client:dependencies')
}

tasks.withType(com.diffplug.gradle.spotless.SpotlessTask) {
    it.dependsOn(swaggerSources.server.code)
}

sourceSets.main.java.srcDir "${swaggerOutputDir}/src/main/java"
