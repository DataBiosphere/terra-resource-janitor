// Build Script Classpath
buildscript {
    ext {
        springBootVersion = '3.4.4'
        springDependencyManagementVersion = '1.1.7'
    }
}

plugins {
    id 'idea'
    id 'jacoco'
    id 'java'

    id 'com.diffplug.spotless' version '6.16.0'
    id 'com.github.spotbugs' version '5.0.13'
    id 'com.github.ben-manes.versions' version '0.52.0'
    id 'com.google.cloud.tools.jib' version '3.4.5'
    id 'de.undercouch.download' version '5.6.0'
    id 'org.hidetake.swagger.generator' version '2.19.2'
    id 'org.sonarqube' version '4.0.0.2929'
    id "org.springframework.boot" version "${springBootVersion}"
    id "io.spring.dependency-management" version "${springDependencyManagementVersion}"
}

allprojects {
    group = gradle.projectGroup
    version = gradle.janitorVersion
    ext {
        artifactGroup = "${group}.janitor"
        swaggerOutputDir = "${buildDir}/generated"
        resourceDir = "${rootDir}/src/main/resources"
        isCiServer = System.getenv().containsKey("CI")
    }

    java {
        toolchain {
            languageVersion.set(JavaLanguageVersion.of(17))
        }
    }

    apply plugin: 'idea'
    idea {
        module {
            generatedSourceDirs = [file("${swaggerOutputDir}/src/main/java")]
            downloadJavadoc = true
        }
    }
}

// If true, search local repository (~/.m2/repository/) first for dependencies.
def useMavenLocal = false
repositories {
    if (useMavenLocal) {
        mavenLocal() // must be listed first to take effect
    }
    mavenCentral()
    maven {
        url 'https://us-central1-maven.pkg.dev/dsp-artifact-registry/libs-release/'
    }
    maven {
        url 'https://us-central1-maven.pkg.dev/dsp-artifact-registry/libs-snapshot/'
    }
}

dependencies {
    // Common utils
    implementation group: 'org.apache.commons', name: 'commons-dbcp2'
    implementation group: 'org.apache.commons', name: 'commons-lang3'
    implementation group: 'org.apache.commons', name: 'commons-pool2'

    // Spring
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jdbc'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    annotationProcessor group: 'org.springframework.boot', name: 'spring-boot-configuration-processor'

    // Misc. Services
    implementation group: 'org.webjars', name: 'webjars-locator-core', version: '0.59'
    implementation group: 'jakarta.validation', name: 'jakarta.validation-api'
    implementation group: 'io.projectreactor', name: 'reactor-core', version: '3.7.4'

    // Google dependencies
    constraints {
        implementation group: 'com.google.guava', name: 'guava', version: '31.1-jre' // '-jre' for Java 8 or higher
    }
    implementation platform('com.google.cloud:libraries-bom:26.59.0') // use common bom
    implementation group: 'com.google.auto.value', name: 'auto-value-annotations'
    implementation group: 'com.google.cloud', name: 'google-cloud-pubsub'
    implementation group: 'com.google.cloud', name: 'google-cloud-iamcredentials'
    annotationProcessor group: 'com.google.auto.value', name: 'auto-value', version: '1.11.0'

    // Database
    implementation group: 'org.liquibase' , name: 'liquibase-core', version: '4.31.1'
    runtimeOnly group: 'org.postgresql', name: 'postgresql', version: '42.7.5'

    // Terra libraries
    implementation group: 'bio.terra', name: 'terra-common-lib', version: '1.1.40-SNAPSHOT'
    implementation group: 'bio.terra', name: 'terra-cloud-resource-lib', version: '1.2.34-SNAPSHOT'
    implementation group: 'bio.terra', name: 'workspace-manager-client', version: '0.254.1186-SNAPSHOT'

    // hk2 is required to use WSM client, but not correctly exposed by the client
    implementation group: 'org.glassfish.jersey.inject', name: 'jersey-hk2'

    // Kubernetes client - should match terra-common-lib
    implementation group: 'io.kubernetes', name: 'client-java', version: '23.0.0'

    // Google cloud open telemetry exporters
    var gcpOpenTelemetryExporterVersion = '0.34.0'
    implementation "com.google.cloud.opentelemetry:exporter-trace:${gcpOpenTelemetryExporterVersion}"
    implementation "com.google.cloud.opentelemetry:exporter-metrics:${gcpOpenTelemetryExporterVersion}"

    // Swagger deps
    implementation group: 'io.swagger.core.v3', name: 'swagger-annotations', version: '2.2.29'
    runtimeOnly group: 'org.webjars.npm', name: 'swagger-ui-dist', version: '3.36.2'
    swaggerCodegen group: 'io.swagger.codegen.v3', name: 'swagger-codegen-cli', version: '3.0.68'

    // Test deps
    testImplementation 'org.awaitility:awaitility:4.3.0'
    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    // Allows us to mock final classes
    testImplementation 'org.mockito:mockito-inline:2.13.0'

    // Transitive dependency constraints due to security vulnerabilities in prior versions.
    // These are not directly included, they are just constrained if they are pulled in as
    // transitive dependencies.
    constraints {
        spotbugs('org.apache.bcel:bcel:6.10.0')
    }
}

// for scans
if (hasProperty('buildScan')) {
    buildScan {
        termsOfServiceUrl = 'https://gradle.com/terms-of-service'
        termsOfServiceAgree = 'yes'
    }
}

def gradleIncDir= "$rootDir/gradle"
apply from: "$gradleIncDir/dependency-locking.gradle"
apply from: "$gradleIncDir/jacoco.gradle"
apply from: "$gradleIncDir/javadoc.gradle"
apply from: "$gradleIncDir/jib.gradle"
apply from: "$gradleIncDir/sonarqube.gradle"
apply from: "$gradleIncDir/spotbugs.gradle"
apply from: "$gradleIncDir/spotless.gradle"
apply from: "$gradleIncDir/swagger-server.gradle"
apply from: "$gradleIncDir/testing.gradle"

tasks.named('dependencies') {
    dependsOn(':terra-resource-janitor-client:dependencies')
}

import com.diffplug.gradle.spotless.SpotlessTask
tasks.withType(SpotlessTask) {
    it.dependsOn(swaggerSources.server.code)
}

sourceSets.main.java.srcDir "${swaggerOutputDir}/src/main/java"
